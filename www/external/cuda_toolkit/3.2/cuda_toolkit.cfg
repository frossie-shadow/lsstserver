# -*- python -*-

import lsst.sconsUtils
import os

dependencies = {}

class Configuration(lsst.sconsUtils.Configuration):

    def __init__(self):
        lsst.sconsUtils.Configuration.__init__(self, __file__, libs=[], hasSwigFiles=False,
                                               hasDoxygenTag=False,
                                               eupsProduct="cuda_toolkit")

    def configure(self, conf, packages, check=False, build=True):
        conf.env.Append(CCFLAGS = ["-DGPU_BUILD"])
        conf.env.Append(NVCCFLAGS = "-DGPU_BUILD")
        conf.env.Append(NVCCFLAGS = " --ptxas-options=-v ")
        conf.env.Append(NVCCFLAGS = ' -maxrregcount=58 ')
        conf.env.Append(NVCCFLAGS = ' -gencode=arch=compute_13,code=\\"sm_13,compute_13\\" ')
        conf.env.Append(NVCCFLAGS = ' -gencode=arch=compute_20,code=\\"sm_20,compute_20\\" ')
        conf.env.Append(SHAREDNVCCFLAGS = ' --compiler-options "-fPIC" ')
        conf.env.Append(CPPPATH = [os.path.join(self.root, "include")])
        conf.env.Append(LIBPATH = [os.path.join(self.root, "lib64")])
        conf.env.Append(LIBPATH = [os.path.join(self.root, "lib")])
        if "main" not in conf.env.libs:
            conf.env.libs["main"] = []
        if "cudart" not in conf.env.libs["main"]:
            conf.env.libs["main"].append("cudart")
        if check:
            pass # should add some tests to verify that we can find cuda here
        return True

config = Configuration()
